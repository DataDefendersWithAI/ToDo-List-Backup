"""empty message

Revision ID: 2d019f635edc
Revises: 
Create Date: 2024-04-30 17:53:30.412057

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2d019f635edc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('groupss', schema=None) as batch_op:
        batch_op.add_column(sa.Column('color', sa.NVARCHAR(length=10), nullable=True))
        batch_op.alter_column('group_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.alter_column('group_title',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               type_=sa.NVARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.drop_column('colors')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.alter_column('tag_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.alter_column('tag_title',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               type_=sa.NVARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('tag_color',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               type_=sa.NVARCHAR(length=10),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.alter_column('group_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               nullable=False)

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('task_title', sa.NVARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('task_description', sa.NVARCHAR(length=500), nullable=True))
        batch_op.add_column(sa.Column('tag_id', sa.NVARCHAR(length=40), nullable=False))
        batch_op.alter_column('task_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.alter_column('isCompleted',
               existing_type=mysql.BIT(length=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)
        batch_op.drop_constraint('tasks_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tags', ['tag_id'], ['tag_id'], ondelete='CASCADE')
        batch_op.drop_column('tags_id')
        batch_op.drop_column('description')
        batch_op.drop_column('title')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               type_=sa.NVARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               type_=sa.NVARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=256),
               type_=sa.NVARCHAR(length=256),
               existing_nullable=True,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('bio',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=2000),
               type_=sa.NVARCHAR(length=2000),
               existing_nullable=True,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('location',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               type_=sa.NVARCHAR(length=200),
               existing_nullable=True,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('image',
               existing_type=mysql.TEXT(),
               type_=sa.NVARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('type_account',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=10),
               type_=sa.NVARCHAR(length=10),
               existing_nullable=True)
        batch_op.alter_column('external_id',
               existing_type=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               type_=sa.NVARCHAR(length=40),
               existing_nullable=True)
        batch_op.alter_column('isFillForm',
               existing_type=mysql.BIT(length=1),
               type_=sa.BOOLEAN(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('isFillForm',
               existing_type=sa.BOOLEAN(),
               type_=mysql.BIT(length=1),
               existing_nullable=True)
        batch_op.alter_column('external_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=True)
        batch_op.alter_column('type_account',
               existing_type=sa.NVARCHAR(length=10),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=10),
               existing_nullable=True)
        batch_op.alter_column('image',
               existing_type=sa.NVARCHAR(length=200),
               type_=mysql.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.NVARCHAR(length=200),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               existing_nullable=True,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('bio',
               existing_type=sa.NVARCHAR(length=2000),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=2000),
               existing_nullable=True,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('name',
               existing_type=sa.NVARCHAR(length=256),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=256),
               existing_nullable=True,
               existing_server_default=sa.text("''"))
        batch_op.alter_column('password',
               existing_type=sa.NVARCHAR(length=100),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.NVARCHAR(length=100),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100), nullable=True))
        batch_op.add_column(sa.Column('description', mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=500), nullable=True))
        batch_op.add_column(sa.Column('tags_id', mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tasks_ibfk_2', 'tags', ['tags_id'], ['tag_id'], ondelete='CASCADE')
        batch_op.alter_column('isCompleted',
               existing_type=sa.BOOLEAN(),
               type_=mysql.BIT(length=1),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)
        batch_op.alter_column('task_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)
        batch_op.drop_column('tag_id')
        batch_op.drop_column('task_description')
        batch_op.drop_column('task_title')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)
        batch_op.alter_column('tag_color',
               existing_type=sa.NVARCHAR(length=10),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               existing_nullable=True)
        batch_op.alter_column('tag_title',
               existing_type=sa.NVARCHAR(length=100),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               existing_nullable=True)
        batch_op.alter_column('tag_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)

    with op.batch_alter_table('groupss', schema=None) as batch_op:
        batch_op.add_column(sa.Column('colors', mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)
        batch_op.alter_column('group_title',
               existing_type=sa.NVARCHAR(length=100),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=100),
               existing_nullable=True)
        batch_op.alter_column('group_id',
               existing_type=sa.NVARCHAR(length=40),
               type_=mysql.VARCHAR(charset='utf8mb3', collation='utf8mb3_general_ci', length=40),
               existing_nullable=False)
        batch_op.drop_column('color')

    # ### end Alembic commands ###
